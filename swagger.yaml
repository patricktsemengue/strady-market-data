openapi: 3.0.0
info:
  title: 'Strady Market Data API'
  version: '1.0.0'
  description: 'API for uploading and searching stock and currency rates data'
#servers:
#  - url: 'http://localhost:3000'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API Key for authentication

security:
  - ApiKeyAuth: []

paths:
  /upload/stocks:
    post:
      summary: Uploads a stock data file (euronext.csv or us.csv).
      description: |-
        Upload a supported stock data file. Each successful upload overwrites the data for that specific file only.
        - **For euronext.csv**: Delimiter is ';'. Must contain columns: Name, ISIN, Symbol, Currency, Open Price, last Price.
        - **For us.csv**: Delimiter is ','. Must contain columns: Symbol, Name, Last Sale.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                stockFile:
                  type: string
                  format: binary
                  description: The euronext.csv or us.csv file to upload.
      responses:
        '200':
          description: File uploaded and processed successfully.
        '400':
          description: Bad Request. Incorrect filename or missing required columns for the given file type.
  /upload/rates:
    post:
      summary: Uploads a currency rates file.
      description: Upload a CSV file named eurofxref.csv with currency rates. Each upload overwrites previous rates data.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ratesFile:
                  type: string
                  format: binary
                  description: The eurofxref.csv rates file to upload.
      responses:
        '200':
          description: Rates file uploaded and processed successfully.
        '400':
          description: Bad Request. Possible reasons - No file uploaded, incorrect filename (must be eurofxref.csv), or missing required columns (Date, USD, CHF, GBP).
  /search:
    get:
      summary: Searches for stock data.
      description: Search by NAME, SYMBOL, or ISIN. The '%' character can be used as a wildcard.
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: The search term. Use % for wildcard matching.
      responses:
        '200':
          description: A list of matching stock records.
  /search/rates/{pattern}:
    get:
      summary: Searches for a specific currency rate.
      description: Searches for a currency rate against the EUR based on a pattern like EUR_USD.
      parameters:
        - in: path
          name: pattern
          required: true
          schema:
            type: string
            example: "EUR_USD"
          description: The currency pair pattern to search for.
      responses:
        '200':
          description: The requested rate was found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pair:
                    type: string
                    example: "EUR_USD"
                  value:
                    type: number
                    example: 1.0673
                  upload_date:
                    type: string
                    format: date-time
                  datasource_name:
                    type: string
                    example: "eurofxref.csv"
        '404':
          description: The requested currency was not found or data has not been uploaded yet.
  
  /refresh/euronext:
    post:
      summary: Refresh Euronext Stock Data
      description: |-
        Triggers a live download of the latest stock data from the Euronext URL.
        The server will download the file, unzip it if necessary, save it as `euronext.csv` in the `/data` directory, and refresh the in-memory cache.
      responses:
        '200':
          description: Data successfully downloaded and cache updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  records_loaded:
                    type: number
        '500':
          description: Failed to download or process the file.
  
  /refresh/rates:
    post:
      summary: Refresh Currency Rates Data
      description: |-
        Triggers a live download of the latest currency rates from the ECB URL.
        The server will download the zip file, unzip it, save it as `eurofxref.csv`, and refresh the in-memory cache.
      responses:
        '200':
          description: Data successfully downloaded and cache updated.
        '500':
          description: Failed to download or process the file.